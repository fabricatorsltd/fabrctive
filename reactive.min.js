class ReactiveCore{fetchContent(sourceUrl){return fetch(sourceUrl).then((response)=>response.text()).then((html)=>{const parser=new DOMParser();const doc=parser.parseFromString(html,"text/html");const sourceElement=doc.querySelector("html");return sourceElement.innerHTML;}).catch((error)=>{console.error("Error:",error);});}
fetchJSON(sourceUrl){return fetch(sourceUrl).then((response)=>response.json()).then((data)=>{return data;}).catch((error)=>{console.error("Error:",error);});}}
class ReactiveHelper{constructor(){this.helperUID=Math.random().toString(36).substr(2,9);this.helperName="Generic";this.component=null;}
init(component){this.component=component;}}
class ReactiveHelperAnimate extends ReactiveHelper{constructor(){super();this.helperName="Animate";}
animate(element,duration,from,to,display,remove=false){element.style.opacity=from;element.style.display=display;let start=null;const step=(timestamp)=>{if(!start)start=timestamp;const progress=timestamp-start;const opacity=from+(to-from)*(progress/duration);element.style.opacity=opacity;if(progress<duration){window.requestAnimationFrame(step);}else{element.style.opacity=to;if(to===0){element.style.display="none";if(remove){element.remove();}}}};window.requestAnimationFrame(step);}
fadeIn(element,duration=400){this.animate(element,duration,0,1,"block");}
fadeOut(element,remove=false,duration=400){this.animate(element,duration,1,0,"block",remove);}}
class ReactiveHelperIcon extends ReactiveHelper{constructor(){super();this.helperName="Icon";this.iconsLibrary="";this.iconDOMStructure=null;}
setIconsLibraryFontAwesome(){this.iconsLibrary="fontawesome";this.iconDOMStructure=document.createElement("i");this.iconDOMStructure.classList.add("fas","fa-{{icon}}");}
setIconsLibraryMaterial(){this.iconsLibrary="material";this.iconDOMStructure=document.createElement("i");this.iconDOMStructure.classList.add("material-icons");this.iconDOMStructure.innerHTML="{{icon}}";}
setIconsLibraryBootstrap(){this.iconsLibrary="bootstrap";this.iconDOMStructure=document.createElement("i");this.iconDOMStructure.classList.add("bi","bi-{{icon}}");}
new(icon){if(this.iconDOMStructure===null){this.setIconsLibraryMaterial();}
const iconElement=this.iconDOMStructure.cloneNode(true);iconElement.previousIcon="{{icon}}";iconElement.changeIcon=(icon)=>{console.log(iconElement.previousIcon);iconElement.innerHTML=iconElement.innerHTML.replace(iconElement.previousIcon,icon);iconElement.previousIcon=icon;};iconElement.changeIcon(icon);return iconElement;}}
class ReactiveCoreComponent extends ReactiveCore{constructor(){super();this.componentUID=Math.random().toString(36).substr(2,9);this.componentName="Generic";this.selector="";this.eventMap={};}
init(){this.initElements();this.initEventListeners();}
get repr(){return`<${this.componentName}:${this.componentUID}>`;}
get reprX(){return[`<${this.componentName}:${this.componentUID}>`,"background: #6c63ff; color: white; border-radius: 3px; padding: 0 3px; font-weight: bold",];}
initElements(){this.elements=document.querySelectorAll(this.selector);}
initEventListeners(){if(Object.keys(this.eventMap).length===0){this.debugger.log(`No event listeners defined for ${this.repr}on ${this.selector}`);return;}
for(let[event,fn]of Object.entries(this.eventMap)){this.elements.forEach((element)=>{element.addEventListener(event,(e)=>{this[fn](e);});});}}
addInternalEventListener(element,event,fn,reference=null){element.addEventListener(event,(e)=>{this[fn](e,reference);});}}
class ReactiveForm extends ReactiveCoreComponent{constructor(){super();this.componentName="ReactiveForm";this.selector="[form-react]";this.eventMap={submit:"onSubmit",};}
onSubmit(event){event.preventDefault();const formData=new FormData(event.target);const formAction=event.target.action;this.submitForm(formAction,formData).then((data)=>{if(data.status===200){if(data.redirect){window.location.href=data.redirect;}else{showToast(data.message,"success",3000,true);}}else{showToast(data.message,"error",0,true);}}).catch((error)=>console.error("Error:",error));}
submitForm(formAction,formData){return fetch(formAction,{method:"POST",body:formData,}).then((response)=>response.json()).then((data)=>{return data;}).catch((error)=>{console.error("Error:",error);});}}
class ReactiveLink extends ReactiveCoreComponent{constructor(){super();this.componentName="ReactiveLink";this.selector="[link-react]";this.eventMap={click:"onClick",};}
onClick(event){event.preventDefault();let source="";let target=event.target.closest("[link-react]");if(target){source=target.hasAttribute("href")?target.getAttribute("href"):target.getAttribute("link-react-target");}
const containerId=target?target.getAttribute("link-react-dom"):null;const container=containerId?document.getElementById(containerId):document.body;this.fetchContent(source).then((html)=>{container.innerHTML=html;const scripts=container.querySelectorAll("script");scripts.forEach((script)=>{if(script.innerText){eval(script.innerText);}else{fetch(script.src).then((response)=>{response.text().then((r)=>{eval(r);});});}});const title=container.querySelector("title");if(title){document.title=title.innerText;}}).then(()=>{if(!containerId){window.history.pushState(null,"",source);}}).catch((error)=>console.error("Error:",error));}
onMouseOver(event){console.log("Mouse Over on:",event.target);}}
class ReactiveCounter extends ReactiveCoreComponent{constructor(){super();this.componentName="ReactiveCounter";this.selector="[counter-react]";this.eventMap={click:"onClick",};this.counters={};}
onClick(event){event.preventDefault();const target=event.target.closest("[counter-react]");if(target){const counterId=target.getAttribute("counter-react");const counter=this.counters[counterId];if(counter){counter.value++;target.innerText=counter.value;}else{const initialValue=parseInt(target.getAttribute("counter-react-initial-value"))||0;this.counters[counterId]={value:initialValue+1};target.innerText=this.counters[counterId].value;}}}}
class ReactiveTooltip extends ReactiveCoreComponent{constructor(){super();this.componentName="ReactiveTooltip";this.selector="[tooltip-react]";this.eventMap={mouseenter:"showTooltip",mouseleave:"removeTooltips",};this.animateHelper=new ReactiveHelperAnimate();this.animateHelper.init(this);}
showTooltip(event){const target=event.target.closest("[tooltip-react]");if(target){const tooltipId=target.getAttribute("tooltip-react");const tooltip=document.createElement("div");tooltip.setAttribute("id",tooltipId);tooltip.setAttribute("class","tooltip");tooltip.innerText=target.getAttribute("tooltip-react-text");document.body.appendChild(tooltip);this.animateHelper.fadeIn(tooltip);}}
removeTooltips(event){const tooltips=document.querySelectorAll(".tooltip");tooltips.forEach((tooltip)=>{this.animateHelper.fadeOut(tooltip,true);});}}
class ReactiveNotebook extends ReactiveCoreComponent{constructor(){super();this.componentName="ReactiveNotebook";this.selector="[notebook-react]";this.eventMap={click:"onClick",};this.tabs={};this.animateHelper=new ReactiveHelperAnimate();this.animateHelper.init(this);}
init(){super.init();this.render();}
render(){const tabs=document.querySelector(this.selector);const tabItems=tabs.querySelectorAll("[notebook-react-item]");tabItems.forEach((tabItem)=>{const tabId=tabItem.getAttribute("notebook-react-item");const tabContent=document.querySelector(`[notebook-react-content="${tabId}"]`);tabContent.style.display="none";if(tabContent){this.tabs[tabId]={tabItem,tabContent,};}});this.activateTab(Object.keys(this.tabs)[0]);}
onClick(event){event.preventDefault();const target=event.target.closest("[notebook-react-item]");if(target){const tabId=target.getAttribute("notebook-react-item");this.activateTab(tabId);}}
activateTab(tabId){Object.keys(this.tabs).forEach((key)=>{const tab=this.tabs[key];if(key===tabId){tab.tabItem.classList.add("active");this.animateHelper.fadeIn(tab.tabContent);}else{tab.tabItem.classList.remove("active");tab.tabContent.style.display="none";}});}}
class ReactiveTable extends ReactiveCoreComponent{constructor(){super();this.componentName="Table";this.selector="[table-react]";this.eventMap={};this.tables=[];this.iconHelper=new ReactiveHelperIcon();this.iconHelper.init(this);this.iconHelper.setIconsLibraryMaterial();}
init(){super.init();this.render();}
render(){this.elements.forEach((table)=>{this.tables.push({element:table,options:table.getAttribute("table-react-options").split("|"),activeElement:null,});});this.tables.forEach((table)=>{this.renderTable(table);});}
renderTable(table){const wrapper=document.createElement("div");wrapper.classList.add("table-react-wrapper");table.element.parentNode.insertBefore(wrapper,table.element);wrapper.appendChild(table.element);table.activeElement=wrapper;if(table.options.includes("search")){this.renderSearch(table);}
if(table.options.includes("sort")){this.renderSort(table);}}
renderSearch(table){const search=document.createElement("input");search.setAttribute("type","text");search.setAttribute("placeholder","Search...");search.setAttribute("table-react-search","");table.activeElement.insertBefore(search,table.element);this.addInternalEventListener(search,"keyup","onKeyup",table);}
renderSort(table){const ths=table.element.querySelectorAll("th");ths.forEach((th)=>{const icon=this.iconHelper.new("unfold_more");th.sortIcon=icon;th.appendChild(icon);this.addInternalEventListener(th,"click","onClick",table);th.setAttribute("table-react-sort","");});}
sortTable(th,table){const isAsc=th.getAttribute("table-react-sort")==="asc";const ths=table.element.querySelectorAll("[table-react-sort]");ths.forEach((th)=>{th.sortIcon.changeIcon("unfold_more");th.setAttribute("table-react-sort","");});const tbody=table.element.querySelector("tbody");const rows=tbody.querySelectorAll("tr");const index=th.cellIndex;const sortedRows=Array.from(rows).sort((rowA,rowB)=>{const cellA=rowA.cells[index].textContent;const cellB=rowB.cells[index].textContent;return isAsc?cellA.localeCompare(cellB):cellB.localeCompare(cellA);});th.setAttribute("table-react-sort",isAsc?"desc":"asc");th.sortIcon.changeIcon(isAsc?"keyboard_arrow_down":"keyboard_arrow_up");while(tbody.firstChild){tbody.removeChild(tbody.firstChild);}
tbody.append(...sortedRows);}
onClick(event,table){const target=event.target.closest("[table-react-sort]");if(target){this.sortTable(target,table);}}
onKeyup(event,table){const target=event.target.closest("[table-react-search]");if(target){this.searchTable(target,table);}}
searchTable(input,table){const value=input.value.toLowerCase();const rows=table.element.querySelectorAll("tbody tr");rows.forEach((row)=>{const text=row.textContent.toLowerCase();if(text.includes(value)){row.style.display="";}else{row.style.display="none";}});}}
class Reactive extends ReactiveCore{constructor(){super();console.log("Reactive initializing");this.init();console.log("Reactive initialized");}
init(){this.initForms();this.initLinks();this.initCounters();this.initTooltips();this.initNotebooks();this.initTables();}
initForms(){const forms=new ReactiveForm();forms.init();}
initLinks(){const links=new ReactiveLink();links.init();}
initCounters(){const counters=new ReactiveCounter();counters.init();}
initTooltips(){const tooltips=new ReactiveTooltip();tooltips.init();}
initNotebooks(){const notebooks=new ReactiveNotebook();notebooks.init();}
initTables(){const tables=new ReactiveTable();tables.init();}}